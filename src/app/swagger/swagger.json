{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:9090",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "bearerAuth": [ ]
    }
  ],
  "paths": {
    "/utilisateurs/{idUtilisateur}/updatepassword": {
      "put": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "updatePasswordUtilisateurById",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/utilisateurs/{idUtilisateur}/update": {
      "put": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "updateUtilisateurById",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertUtilisateurDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/utilisateurs/UpdateUserById/{idUtilisateur}": {
      "put": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "telephone",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/typeoptions/{idOption}/{idTypeOption}": {
      "get": {
        "tags": [
          "TypeOptions"
        ],
        "operationId": "getTypeOptionsById",
        "parameters": [
          {
            "name": "idOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTypeOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TypeOptions"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "idOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTypeOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeOptionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TypeOptions"
        ],
        "operationId": "deleteById",
        "parameters": [
          {
            "name": "idOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idTypeOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/statuses/{idStatus}": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "operationId": "getStatusById",
        "parameters": [
          {
            "name": "idStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Statuses"
        ],
        "operationId": "updateStatus",
        "parameters": [
          {
            "name": "idStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Statuses"
        ],
        "operationId": "deleteStatus",
        "parameters": [
          {
            "name": "idStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/options/{idOption}": {
      "get": {
        "tags": [
          "Options"
        ],
        "operationId": "getOptionsById",
        "parameters": [
          {
            "name": "idOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Options"
        ],
        "operationId": "update_1",
        "parameters": [
          {
            "name": "idOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Options"
        ],
        "operationId": "deleteById_1",
        "parameters": [
          {
            "name": "idOption",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/optionlignecommandes/{numeroCommande}/{numeroLigneCommande}": {
      "get": {
        "tags": [
          "OptionLigneCommandes"
        ],
        "operationId": "getAllByNumeros",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "numeroLigneCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OptionLigneCommandes"
        ],
        "operationId": "updateTypeOptions",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "numeroLigneCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypeOptionDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/optioncategories/{idCategorie}": {
      "get": {
        "tags": [
          "OptionCategories"
        ],
        "operationId": "getOptionsCategoriesByIdCategorie",
        "parameters": [
          {
            "name": "idCategorie",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OptionCategories"
        ],
        "operationId": "updateOptions",
        "parameters": [
          {
            "name": "idCategorie",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TypeOptionDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/lignecommandes/{numeroCommande}/{numeroLigneCommande}/{newIdStatus}": {
      "put": {
        "tags": [
          "LigneCommandes"
        ],
        "operationId": "updateStatus_1",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "numeroLigneCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newIdStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/commandes/{numeroCommande}/{newIdStatus}": {
      "put": {
        "tags": [
          "Commandes"
        ],
        "operationId": "updateStatus_2",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "newIdStatus",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{idCategorie}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "getCategorieById",
        "parameters": [
          {
            "name": "idCategorie",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "operationId": "updateCategorie",
        "parameters": [
          {
            "name": "idCategorie",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategorieDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "operationId": "deleteMapping",
        "parameters": [
          {
            "name": "idCategorie",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/adresses/update": {
      "put": {
        "tags": [
          "address"
        ],
        "operationId": "updateAdress",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rue",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "complement",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "codePostal",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ville",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/utilisateurs/{id}/addAdresseToUser": {
      "post": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "addAdresseToUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdresseDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/typeoptions": {
      "get": {
        "tags": [
          "TypeOptions"
        ],
        "operationId": "getTypeOptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TypeOptions"
        ],
        "operationId": "insert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeOptionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/statuses": {
      "get": {
        "tags": [
          "Statuses"
        ],
        "operationId": "getStatuses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Statuses"
        ],
        "operationId": "insertStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/options": {
      "get": {
        "tags": [
          "Options"
        ],
        "operationId": "getOptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Options"
        ],
        "operationId": "insert_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/optionlignecommandes": {
      "get": {
        "tags": [
          "OptionLigneCommandes"
        ],
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OptionLigneCommandes"
        ],
        "operationId": "insert_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptionLigneCommandeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OptionLigneCommandes"
        ],
        "operationId": "delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptionLigneCommandeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/optioncategories": {
      "get": {
        "tags": [
          "OptionCategories"
        ],
        "operationId": "getOptionsCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OptionCategories"
        ],
        "operationId": "insert_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptionCategorieDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OptionCategories"
        ],
        "operationId": "delete_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptionCategorieDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/mail/mail": {
      "post": {
        "tags": [
          "mail-controller"
        ],
        "operationId": "emailSending",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "La syntaxe ou le contenu est invalide.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Vous n'avez pas l'autorisation.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Erreur serveur, veuillez réessayer plus tard.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/lignecommandes": {
      "get": {
        "tags": [
          "LigneCommandes"
        ],
        "operationId": "getAll_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LigneCommandes"
        ],
        "operationId": "insert_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertLigneCommandeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/intervenirs": {
      "get": {
        "tags": [
          "Intervenirs"
        ],
        "operationId": "getAll_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Intervenirs"
        ],
        "operationId": "insert_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertIntervenirDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/fichiers": {
      "get": {
        "tags": [
          "Fichiers"
        ],
        "operationId": "getFichiers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Fichiers"
        ],
        "operationId": "uploadFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/commandes": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "operationId": "getCommandes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Commandes"
        ],
        "operationId": "insert_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertCommandeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/commandes/fullfichier": {
      "post": {
        "tags": [
          "Commandes"
        ],
        "operationId": "insertFullCommandeFichier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "fichiers"
                ],
                "type": "object",
                "properties": {
                  "commandeDto": {
                    "$ref": "#/components/schemas/InsertFullCommandeDto"
                  },
                  "fichiers": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/commandes/full": {
      "post": {
        "tags": [
          "Commandes"
        ],
        "operationId": "insertFullCommande",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertFullCommandeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "getCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "insertCategorie",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategorieDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/resetPassword/{token}": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register/admin": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "operationId": "registerAdmin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/checkEmail": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "operationId": "resetPasswordEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/authenticate": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/checkout": {
      "post": {
        "tags": [
          "payment-controller"
        ],
        "operationId": "checkOut",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/adresses/": {
      "post": {
        "tags": [
          "address"
        ],
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdresseDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/utilisateurs": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "getUtilisateurs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/utilisateurs/{idUtilisateur}": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "getUtilisateurById",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/utilisateurs/findall": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "findAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UtilisateurDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lignecommandes/{numeroCommande}": {
      "get": {
        "tags": [
          "LigneCommandes"
        ],
        "operationId": "getAllByNumeroCommande",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/lignecommandes/{numeroCommande}/{numeroLigneCommande}": {
      "get": {
        "tags": [
          "LigneCommandes"
        ],
        "operationId": "getByNumeros",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "numeroLigneCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/intervenirs/{numeroCommande}": {
      "get": {
        "tags": [
          "Intervenirs"
        ],
        "operationId": "getAllByNumeroCommande_1",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/fichiers/{idFichier}": {
      "get": {
        "tags": [
          "Fichiers"
        ],
        "operationId": "getFichierById",
        "parameters": [
          {
            "name": "idFichier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/fichiers/{idFichier}/download": {
      "get": {
        "tags": [
          "Fichiers"
        ],
        "operationId": "getFile",
        "parameters": [
          {
            "name": "idFichier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/commandes/{numeroCommande}": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "operationId": "getCommandesByNumero",
        "parameters": [
          {
            "name": "numeroCommande",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/commandes/utilisateur/{idUtilisateur}": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "operationId": "getCommandesByIdUser",
        "parameters": [
          {
            "name": "idUtilisateur",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/confirm": {
      "get": {
        "tags": [
          "Authentification"
        ],
        "operationId": "confirm",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/token": {
      "get": {
        "tags": [
          "payment-controller"
        ],
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/adresses/{address-id}": {
      "get": {
        "tags": [
          "address"
        ],
        "operationId": "findById",
        "parameters": [
          {
            "name": "address-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdresseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "address"
        ],
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "address-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/adresses/findAll": {
      "get": {
        "tags": [
          "address"
        ],
        "operationId": "findAll_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdresseDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/utilisateurs/users/{id}": {
      "delete": {
        "tags": [
          "Utilisateurs"
        ],
        "operationId": "deleteUserAndAddresses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "InsertUtilisateurDto": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string"
          },
          "prenom": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          }
        }
      },
      "TypeOptionDto": {
        "type": "object",
        "properties": {
          "idOption": {
            "type": "integer",
            "format": "int32"
          },
          "idTypeOption": {
            "type": "integer",
            "format": "int32"
          },
          "libelle": {
            "type": "string"
          },
          "prix": {
            "type": "number"
          }
        }
      },
      "StatusDto": {
        "type": "object",
        "properties": {
          "idStatus": {
            "type": "integer",
            "format": "int32"
          },
          "libelle": {
            "type": "string"
          }
        }
      },
      "OptionDto": {
        "type": "object",
        "properties": {
          "idOption": {
            "type": "integer",
            "format": "int32"
          },
          "libelle": {
            "type": "string"
          }
        }
      },
      "CategorieDto": {
        "type": "object",
        "properties": {
          "idCategorie": {
            "type": "integer",
            "format": "int32"
          },
          "libelle": {
            "type": "string"
          }
        }
      },
      "AdresseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "rue": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "codePostal": {
            "type": "string"
          },
          "ville": {
            "type": "string"
          },
          "typeAdresse": {
            "$ref": "#/components/schemas/TypeAdresse"
          },
          "utilisateurId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TypeAdresse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "libelle": {
            "type": "string"
          }
        }
      },
      "OptionLigneCommandeDto": {
        "type": "object",
        "properties": {
          "numeroCommande": {
            "type": "integer",
            "format": "int32"
          },
          "numeroLigneCommande": {
            "type": "integer",
            "format": "int32"
          },
          "typeOptionDto": {
            "$ref": "#/components/schemas/TypeOptionDto"
          }
        }
      },
      "OptionCategorieDto": {
        "type": "object",
        "properties": {
          "idCategorie": {
            "type": "integer",
            "format": "int32"
          },
          "typeOptionDto": {
            "$ref": "#/components/schemas/TypeOptionDto"
          }
        }
      },
      "EmailMessage": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          }
        }
      },
      "InsertLigneCommandeDto": {
        "type": "object",
        "properties": {
          "numeroCommande": {
            "type": "integer",
            "format": "int32"
          },
          "rectoVerso": {
            "type": "boolean"
          },
          "couleur": {
            "type": "boolean"
          },
          "nombreExemplaire": {
            "type": "integer",
            "format": "int32"
          },
          "nombreFeuille": {
            "type": "integer",
            "format": "int32"
          },
          "prixLigneCommande": {
            "type": "number"
          },
          "idFichier": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InsertIntervenirDto": {
        "type": "object",
        "properties": {
          "numeroCommande": {
            "type": "integer",
            "format": "int32"
          },
          "numeroLigneCommande": {
            "type": "integer",
            "format": "int32"
          },
          "idUtilisateur": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "InsertCommandeDto": {
        "type": "object",
        "properties": {
          "idUtilisateur": {
            "type": "integer",
            "format": "int32"
          },
          "idAdresse": {
            "type": "integer",
            "format": "int32"
          },
          "prix": {
            "type": "number"
          }
        }
      },
      "InsertFullCommandeDto": {
        "type": "object",
        "properties": {
          "commandeDto": {
            "$ref": "#/components/schemas/InsertCommandeDto"
          },
          "ligneCommandesDto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsertLigneCommandeDto"
            }
          }
        }
      },
      "NewPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "tokenPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          }
        }
      },
      "RegisterRequest": {
        "required": [
          "email",
          "nom",
          "password",
          "prenom",
          "telephone"
        ],
        "type": "object",
        "properties": {
          "nom": {
            "type": "string"
          },
          "prenom": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "maxLength": 16,
            "minLength": 8,
            "type": "string"
          },
          "telephone": {
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "PurchaseDto": {
        "type": "object",
        "properties": {
          "nonce": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        }
      },
      "AchMandate": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AchReturnResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string"
          },
          "reasonCode": {
            "type": "string"
          }
        }
      },
      "AddOn": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currentBillingCycle": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "numberOfBillingCycles": {
            "type": "integer",
            "format": "int32"
          },
          "planId": {
            "type": "string"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string"
          },
          "countryCodeAlpha2": {
            "type": "string"
          },
          "countryCodeAlpha3": {
            "type": "string"
          },
          "countryCodeNumeric": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "extendedAddress": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "recipientName": {
            "type": "string"
          },
          "streetAddress": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Adjustment": {
        "type": "object",
        "properties": {
          "projectedDisbursementDate": {
            "type": "string",
            "format": "date-time"
          },
          "actualDisbursementDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          },
          "kind": {
            "type": "string",
            "enum": [
              "REFUND",
              "DISPUTE",
              "UNRECOGNIZED"
            ]
          }
        }
      },
      "AmexExpressCheckoutCard": {
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "cardMemberNumber": {
            "type": "string"
          },
          "cardMemberExpiryDate": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "AmexExpressCheckoutDetails": {
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "cardMemberNumber": {
            "type": "string"
          },
          "cardMemberExpiryDate": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          }
        }
      },
      "AndroidPayCard": {
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "sourceCardType": {
            "type": "string"
          },
          "sourceCardLast4": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          },
          "virtualCardType": {
            "type": "string"
          },
          "virtualCardLast4": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "googleTransactionId": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "prepaid": {
            "type": "string"
          },
          "healthcare": {
            "type": "string"
          },
          "debit": {
            "type": "string"
          },
          "durbinRegulated": {
            "type": "string"
          },
          "commercial": {
            "type": "string"
          },
          "payroll": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "networkTokenized": {
            "type": "boolean"
          }
        }
      },
      "AndroidPayDetails": {
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "sourceCardType": {
            "type": "string"
          },
          "sourceCardLast4": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          },
          "virtualCardType": {
            "type": "string"
          },
          "virtualCardLast4": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "googleTransactionId": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "prepaid": {
            "type": "string"
          },
          "healthcare": {
            "type": "string"
          },
          "debit": {
            "type": "string"
          },
          "durbinRegulated": {
            "type": "string"
          },
          "commercial": {
            "type": "string"
          },
          "payroll": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "globalId": {
            "type": "string"
          },
          "networkTokenized": {
            "type": "boolean"
          }
        }
      },
      "ApplePayCard": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "paymentInstrumentName": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          },
          "customerId": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "prepaid": {
            "type": "string"
          },
          "healthcare": {
            "type": "string"
          },
          "debit": {
            "type": "string"
          },
          "durbinRegulated": {
            "type": "string"
          },
          "commercial": {
            "type": "string"
          },
          "payroll": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "ApplePayDetails": {
        "type": "object",
        "properties": {
          "cardType": {
            "type": "string"
          },
          "paymentInstrumentName": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "prepaid": {
            "type": "string"
          },
          "healthcare": {
            "type": "string"
          },
          "debit": {
            "type": "string"
          },
          "durbinRegulated": {
            "type": "string"
          },
          "commercial": {
            "type": "string"
          },
          "payroll": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "bin": {
            "type": "string"
          },
          "globalId": {
            "type": "string"
          }
        }
      },
      "AuthorizationAdjustment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "processorResponseCode": {
            "type": "string"
          },
          "processorResponseText": {
            "type": "string"
          },
          "processorResponseType": {
            "type": "string",
            "enum": [
              "APPROVED",
              "SOFT_DECLINED",
              "HARD_DECLINED",
              "UNRECOGNIZED"
            ]
          }
        }
      },
      "CreditCard": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "bin": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "customerLocation": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "commercial": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "debit": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "durbinRegulated": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "healthcare": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "payroll": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "prepaid": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "productId": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "uniqueNumberIdentifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "verification": {
            "$ref": "#/components/schemas/CreditCardVerification"
          },
          "accountType": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "networkTokenized": {
            "type": "boolean"
          },
          "venmoSdk": {
            "type": "boolean"
          },
          "expirationDate": {
            "type": "string"
          },
          "maskedNumber": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          }
        }
      },
      "CreditCardVerification": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "avsErrorResponseCode": {
            "type": "string"
          },
          "avsPostalCodeResponseCode": {
            "type": "string"
          },
          "avsStreetAddressResponseCode": {
            "type": "string"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "cvvResponseCode": {
            "type": "string"
          },
          "gatewayRejectionReason": {
            "type": "string",
            "enum": [
              "application_incomplete",
              "avs",
              "avs_and_cvv",
              "cvv",
              "duplicate",
              "excessive_retry",
              "fraud",
              "risk_threshold",
              "three_d_secure",
              "token_issuance",
              "unrecognized"
            ]
          },
          "processorResponseCode": {
            "type": "string"
          },
          "processorResponseText": {
            "type": "string"
          },
          "processorResponseType": {
            "type": "string",
            "enum": [
              "APPROVED",
              "SOFT_DECLINED",
              "HARD_DECLINED",
              "UNRECOGNIZED"
            ]
          },
          "networkResponseCode": {
            "type": "string"
          },
          "networkResponseText": {
            "type": "string"
          },
          "networkTransactionId": {
            "type": "string"
          },
          "merchantAccountId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "FAILED",
              "GATEWAY_REJECTED",
              "PROCESSOR_DECLINED",
              "UNRECOGNIZED",
              "VERIFIED"
            ]
          },
          "id": {
            "type": "string"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCard"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "riskData": {
            "$ref": "#/components/schemas/RiskData"
          },
          "threeDSecureInfo": {
            "$ref": "#/components/schemas/ThreeDSecureInfo"
          },
          "graphQLId": {
            "type": "string"
          }
        }
      },
      "CustomActionsPaymentMethod": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "globalId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "uniqueNumberIdentifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "actionName": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomActionsPaymentMethodField"
            }
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "CustomActionsPaymentMethodDetails": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "actionName": {
            "type": "string"
          },
          "globalId": {
            "type": "string"
          },
          "uniqueNumberIdentifier": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomActionsPaymentMethodField"
            }
          }
        }
      },
      "CustomActionsPaymentMethodField": {
        "type": "object",
        "properties": {
          "displayValue": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "company": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "amexExpressCheckoutCards": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/AmexExpressCheckoutCard"
            }
          },
          "androidPayCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AndroidPayCard"
            }
          },
          "applePayCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplePayCard"
            }
          },
          "creditCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditCard"
            }
          },
          "customActionsPaymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomActionsPaymentMethod"
            }
          },
          "masterpassCards": {
            "type": "array",
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/MasterpassCard"
            }
          },
          "samsungPayCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SamsungPayCard"
            }
          },
          "sepaDirectDebitAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SepaDirectDebitAccount"
            }
          },
          "usBankAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsBankAccount"
            }
          },
          "venmoAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VenmoAccount"
            }
          },
          "visaCheckoutCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VisaCheckoutCard"
            }
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payPalAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PayPalAccount"
            }
          },
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "graphQLId": {
            "type": "string"
          }
        }
      },
      "Descriptor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "DisbursementDetails": {
        "type": "object",
        "properties": {
          "disbursementDate": {
            "type": "string",
            "format": "date-time"
          },
          "settlementCurrencyIsoCode": {
            "type": "string"
          },
          "fundsHeld": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "settlementCurrencyExchangeRate": {
            "type": "number"
          },
          "settlementAmount": {
            "type": "number"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "Discount": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currentBillingCycle": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "numberOfBillingCycles": {
            "type": "integer",
            "format": "int32"
          },
          "planId": {
            "type": "string"
          }
        }
      },
      "Dispute": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time"
          },
          "replyByDate": {
            "type": "string",
            "format": "date-time"
          },
          "openedDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "wonDate": {
            "type": "string",
            "format": "date-time"
          },
          "evidence": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisputeEvidence"
            }
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisputeStatusHistory"
            }
          },
          "caseNumber": {
            "type": "string"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "processorComments": {
            "type": "string"
          },
          "merchantAccountId": {
            "type": "string"
          },
          "originalDisputeId": {
            "type": "string"
          },
          "reasonCode": {
            "type": "string"
          },
          "reasonDescription": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "reason": {
            "type": "string",
            "enum": [
              "CANCELLED_RECURRING_TRANSACTION",
              "CREDIT_NOT_PROCESSED",
              "DUPLICATE",
              "FRAUD",
              "GENERAL",
              "INVALID_ACCOUNT",
              "NOT_RECOGNIZED",
              "PRODUCT_NOT_RECEIVED",
              "PRODUCT_UNSATISFACTORY",
              "TRANSACTION_AMOUNT_DIFFERS",
              "RETRIEVAL"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "LOST",
              "WON",
              "UNRECOGNIZED",
              "ACCEPTED",
              "AUTO_ACCEPTED",
              "DISPUTED",
              "EXPIRED"
            ]
          },
          "kind": {
            "type": "string",
            "enum": [
              "CHARGEBACK",
              "PRE_ARBITRATION",
              "RETRIEVAL",
              "UNRECOGNIZED"
            ]
          },
          "chargebackProtectionLevel": {
            "type": "string",
            "deprecated": true,
            "enum": [
              "EFFORTLESS",
              "STANDARD",
              "NOT_PROTECTED"
            ]
          },
          "protectionLevel": {
            "type": "string",
            "enum": [
              "Effortless Chargeback Protection tool",
              "Chargeback Protection tool",
              "No Protection"
            ]
          },
          "preDisputeProgram": {
            "type": "string",
            "enum": [
              "NONE",
              "UNRECOGNIZED",
              "VISA_RDR"
            ]
          },
          "amount": {
            "type": "number"
          },
          "disputedAmount": {
            "type": "number"
          },
          "wonAmount": {
            "type": "number"
          },
          "transaction": {
            "$ref": "#/components/schemas/DisputeTransaction"
          },
          "graphQLId": {
            "type": "string"
          },
          "payPalMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisputePayPalMessage"
            }
          }
        }
      },
      "DisputeEvidence": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "sentToProcessorAt": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "string"
          }
        }
      },
      "DisputePayPalMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "sender": {
            "type": "string"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DisputeStatusHistory": {
        "type": "object",
        "properties": {
          "disbursementDate": {
            "type": "string",
            "format": "date-time"
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "LOST",
              "WON",
              "UNRECOGNIZED",
              "ACCEPTED",
              "AUTO_ACCEPTED",
              "DISPUTED",
              "EXPIRED"
            ]
          }
        }
      },
      "DisputeTransaction": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "installmentCount": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "string"
          },
          "paymentInstrumentSubtype": {
            "type": "string"
          },
          "purchaseOrderNumber": {
            "type": "string"
          }
        }
      },
      "FacilitatedDetails": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "string"
          },
          "merchantName": {
            "type": "string"
          },
          "paymentMethodNonce": {
            "type": "string"
          }
        }
      },
      "FacilitatorDetails": {
        "type": "object",
        "properties": {
          "oauthApplicationClientId": {
            "type": "string"
          },
          "oauthApplicationName": {
            "type": "string"
          },
          "sourcePaymentMethodToken": {
            "type": "string"
          }
        }
      },
      "Installment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectedDisbursementDate": {
            "type": "string",
            "format": "date-time"
          },
          "actualDisbursementDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number"
          },
          "adjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Adjustment"
            }
          }
        }
      },
      "LiabilityShift": {
        "type": "object",
        "properties": {
          "responsibleParty": {
            "type": "string"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LocalPaymentDetails": {
        "type": "object",
        "properties": {
          "captureId": {
            "type": "string"
          },
          "customField": {
            "type": "string"
          },
          "debugId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fundingSource": {
            "type": "string"
          },
          "payerId": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "refundFromTransactionFeeAmount": {
            "type": "string"
          },
          "refundFromTransactionFeeCurrencyIsoCode": {
            "type": "string"
          },
          "refundId": {
            "type": "string"
          },
          "transactionFeeAmount": {
            "type": "string"
          },
          "transactionFeeCurrencyIsoCode": {
            "type": "string"
          }
        }
      },
      "MasterpassCard": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "bin": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "customerLocation": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "commercial": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "debit": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "durbinRegulated": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "healthcare": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "payroll": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "prepaid": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "productId": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "uniqueNumberIdentifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "default": {
            "type": "boolean"
          },
          "venmoSdk": {
            "type": "boolean"
          },
          "expirationDate": {
            "type": "string"
          },
          "maskedNumber": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          }
        }
      },
      "MasterpassCardDetails": {
        "type": "object",
        "properties": {
          "bin": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "commercial": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "debit": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "durbinRegulated": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "healthcare": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "payroll": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "prepaid": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "productId": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "maskedNumber": {
            "type": "string"
          }
        }
      },
      "PayPalAccount": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "billingAgreementId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "payerId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "revokedAt": {
            "type": "string",
            "format": "date-time"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "PayPalDetails": {
        "type": "object",
        "properties": {
          "payerEmail": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "authorizationId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "debugId": {
            "type": "string"
          },
          "payeeId": {
            "type": "string"
          },
          "payeeEmail": {
            "type": "string"
          },
          "customField": {
            "type": "string"
          },
          "payerId": {
            "type": "string"
          },
          "payerFirstName": {
            "type": "string"
          },
          "payerLastName": {
            "type": "string"
          },
          "payerStatus": {
            "type": "string"
          },
          "sellerProtectionStatus": {
            "type": "string"
          },
          "captureId": {
            "type": "string"
          },
          "refundId": {
            "type": "string"
          },
          "taxId": {
            "type": "string"
          },
          "taxIdType": {
            "type": "string"
          },
          "transactionFeeAmount": {
            "type": "string"
          },
          "transactionFeeCurrencyIsoCode": {
            "type": "string"
          },
          "refundFromTransactionFeeAmount": {
            "type": "string"
          },
          "refundFromTransactionFeeCurrencyIsoCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "implicitlyVaultedPaymentMethodToken": {
            "type": "string"
          },
          "implicitlyVaultedPaymentMethodGlobalId": {
            "type": "string"
          },
          "billingAgreementId": {
            "type": "string"
          }
        }
      },
      "PayPalHereDetails": {
        "type": "object",
        "properties": {
          "authorizationId": {
            "type": "string"
          },
          "captureId": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "paymentId": {
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "refundId": {
            "type": "string"
          },
          "transactionFeeAmount": {
            "type": "string"
          },
          "transactionFeeCurrencyIsoCode": {
            "type": "string"
          },
          "transactionInitiationDate": {
            "type": "string"
          },
          "transactionUpdatedDate": {
            "type": "string"
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "default": {
            "type": "boolean"
          },
          "customerId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Plan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOn"
            }
          },
          "merchantId": {
            "type": "string"
          },
          "billingDayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "billingFrequency": {
            "type": "integer",
            "format": "int32"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "name": {
            "type": "string"
          },
          "numberOfBillingCycles": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number"
          },
          "trialDuration": {
            "type": "integer",
            "format": "int32"
          },
          "trialDurationUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "MONTH",
              "UNRECOGNIZED"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResultTransaction": {
        "type": "object",
        "properties": {
          "usBankAccountVerification": {
            "$ref": "#/components/schemas/UsBankAccountVerification"
          },
          "creditCardVerification": {
            "$ref": "#/components/schemas/CreditCardVerification"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan"
          },
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          },
          "errors": {
            "$ref": "#/components/schemas/ValidationErrors"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "message": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/Transaction"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "RiskData": {
        "type": "object",
        "properties": {
          "deviceDataCaptured": {
            "type": "boolean"
          },
          "liabilityShift": {
            "$ref": "#/components/schemas/LiabilityShift"
          },
          "decisionReasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "decision": {
            "type": "string"
          },
          "fraudServiceProvider": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "transactionRiskScore": {
            "type": "string"
          }
        }
      },
      "SamsungPayCard": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "bin": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "customerLocation": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "commercial": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "debit": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "durbinRegulated": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "healthcare": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "payroll": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "prepaid": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "productId": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "uniqueNumberIdentifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "default": {
            "type": "boolean"
          },
          "venmoSdk": {
            "type": "boolean"
          },
          "expirationDate": {
            "type": "string"
          },
          "maskedNumber": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          }
        }
      },
      "SamsungPayCardDetails": {
        "type": "object",
        "properties": {
          "bin": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "commercial": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "debit": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "durbinRegulated": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "healthcare": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "payroll": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "prepaid": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "productId": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "maskedNumber": {
            "type": "string"
          }
        }
      },
      "SepaDirectDebitAccount": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "mandateType": {
            "type": "string",
            "enum": [
              "ONE_OFF",
              "RECURRENT"
            ]
          },
          "bankReferenceToken": {
            "type": "string"
          },
          "customerGlobalId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "globalId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "merchantAccountId": {
            "type": "string"
          },
          "merchantOrPartnerCustomerId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "viewMandateUrl": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "SepaDirectDebitAccountDetails": {
        "type": "object",
        "properties": {
          "mandateType": {
            "type": "string",
            "enum": [
              "ONE_OFF",
              "RECURRENT"
            ]
          },
          "settlementType": {
            "type": "string",
            "enum": [
              "INSTANT",
              "DELAYED"
            ]
          },
          "bankReferenceToken": {
            "type": "string"
          },
          "captureId": {
            "type": "string"
          },
          "merchantOrPartnerCustomerId": {
            "type": "string"
          },
          "debugId": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "refundFromTransactionFeeAmount": {
            "type": "string"
          },
          "refundFromTransactionFeeCurrencyIsoCode": {
            "type": "string"
          },
          "refundId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "transactionFeeAmount": {
            "type": "string"
          },
          "transactionFeeCurrencyIsoCode": {
            "type": "string"
          },
          "payPalV2OrderId": {
            "type": "string"
          }
        }
      },
      "StatusEvent": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "AUTHORIZATION_EXPIRED",
              "AUTHORIZED",
              "AUTHORIZING",
              "FAILED",
              "GATEWAY_REJECTED",
              "PROCESSOR_DECLINED",
              "SETTLED",
              "SETTLEMENT_CONFIRMED",
              "SETTLEMENT_DECLINED",
              "SETTLEMENT_PENDING",
              "SETTLING",
              "SUBMITTED_FOR_SETTLEMENT",
              "UNRECOGNIZED",
              "VOIDED"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string",
            "enum": [
              "api",
              "control_panel",
              "recurring",
              "unrecognized"
            ]
          },
          "user": {
            "type": "string"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOn"
            }
          },
          "balance": {
            "type": "number"
          },
          "billingDayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "billingPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "billingPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "currentBillingCycle": {
            "type": "integer",
            "format": "int32"
          },
          "daysPastDue": {
            "type": "integer",
            "format": "int32"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "description": {
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "failureCount": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "firstBillingDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "merchantAccountId": {
            "type": "string"
          },
          "nextBillingDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextBillingPeriodAmount": {
            "type": "number"
          },
          "numberOfBillingCycles": {
            "type": "integer",
            "format": "int32"
          },
          "paidThroughDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethodToken": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Canceled",
              "Expired",
              "Past Due",
              "Pending",
              "Unrecognized"
            ]
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionStatusEvent"
            }
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "trialDuration": {
            "type": "integer",
            "format": "int32"
          },
          "trialDurationUnit": {
            "type": "string",
            "enum": [
              "DAY",
              "MONTH",
              "UNRECOGNIZED"
            ]
          }
        }
      },
      "SubscriptionDetails": {
        "type": "object",
        "properties": {
          "billingPeriodEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "billingPeriodStartDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SubscriptionStatusEvent": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string",
            "enum": [
              "api",
              "control_panel",
              "recurring",
              "unrecognized"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Canceled",
              "Expired",
              "Past Due",
              "Pending",
              "Unrecognized"
            ]
          },
          "user": {
            "type": "string"
          }
        }
      },
      "ThreeDSecureAuthenticateInfo": {
        "type": "object",
        "properties": {
          "transStatus": {
            "type": "string"
          },
          "transStatusReason": {
            "type": "string"
          }
        }
      },
      "ThreeDSecureInfo": {
        "type": "object",
        "properties": {
          "liabilityShifted": {
            "type": "boolean"
          },
          "liabilityShiftPossible": {
            "type": "boolean"
          },
          "enrolled": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "cavv": {
            "type": "string"
          },
          "xid": {
            "type": "string"
          },
          "threeDSecureVersion": {
            "type": "string"
          },
          "dsTransactionId": {
            "type": "string"
          },
          "threeDSecureAuthenticationId": {
            "type": "string"
          },
          "acsTransactionId": {
            "type": "string"
          },
          "paresStatus": {
            "type": "string"
          },
          "threeDSecureServerTransactionId": {
            "type": "string"
          },
          "threeDSecureLookupInfo": {
            "$ref": "#/components/schemas/ThreeDSecureLookupInfo"
          },
          "threeDSecureAuthenticateInfo": {
            "$ref": "#/components/schemas/ThreeDSecureAuthenticateInfo"
          },
          "eciflag": {
            "type": "string"
          }
        }
      },
      "ThreeDSecureLookupInfo": {
        "type": "object",
        "properties": {
          "transStatus": {
            "type": "string"
          },
          "transStatusReason": {
            "type": "string"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "amexExpressCheckoutDetails": {
            "$ref": "#/components/schemas/AmexExpressCheckoutDetails"
          },
          "androidPayDetails": {
            "$ref": "#/components/schemas/AndroidPayDetails"
          },
          "applePayDetails": {
            "$ref": "#/components/schemas/ApplePayDetails"
          },
          "amount": {
            "type": "number"
          },
          "discountAmount": {
            "type": "number"
          },
          "serviceFeeAmount": {
            "type": "number"
          },
          "shippingAmount": {
            "type": "number"
          },
          "taxAmount": {
            "type": "number"
          },
          "recurring": {
            "type": "boolean",
            "deprecated": true
          },
          "taxExempt": {
            "type": "boolean"
          },
          "authorizationExpiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCard"
          },
          "customActionsPaymentMethodDetails": {
            "$ref": "#/components/schemas/CustomActionsPaymentMethodDetails"
          },
          "networkToken": {
            "$ref": "#/components/schemas/CreditCard"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "descriptor": {
            "$ref": "#/components/schemas/Descriptor"
          },
          "disbursementDetails": {
            "$ref": "#/components/schemas/DisbursementDetails"
          },
          "escrowStatus": {
            "type": "string",
            "enum": [
              "HELD",
              "HOLD_PENDING",
              "RELEASE_PENDING",
              "RELEASED",
              "REFUNDED",
              "UNRECOGNIZED"
            ]
          },
          "facilitatedDetails": {
            "$ref": "#/components/schemas/FacilitatedDetails"
          },
          "facilitatorDetails": {
            "$ref": "#/components/schemas/FacilitatorDetails"
          },
          "gatewayRejectionReason": {
            "type": "string",
            "enum": [
              "application_incomplete",
              "avs",
              "avs_and_cvv",
              "cvv",
              "duplicate",
              "excessive_retry",
              "fraud",
              "risk_threshold",
              "three_d_secure",
              "token_issuance",
              "unrecognized"
            ]
          },
          "installmentCount": {
            "type": "integer",
            "format": "int32"
          },
          "achReturnResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AchReturnResponse"
            }
          },
          "addOns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddOn"
            }
          },
          "authorizationAdjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizationAdjustment"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          },
          "disputes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dispute"
            }
          },
          "installments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Installment"
            }
          },
          "refundedInstallments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Installment"
            }
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusEvent"
            }
          },
          "partialSettlementTransactionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "refundIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "localPaymentDetails": {
            "$ref": "#/components/schemas/LocalPaymentDetails"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "masterpassCardDetails": {
            "$ref": "#/components/schemas/MasterpassCardDetails"
          },
          "processorResponseType": {
            "type": "string",
            "enum": [
              "APPROVED",
              "SOFT_DECLINED",
              "HARD_DECLINED",
              "UNRECOGNIZED"
            ]
          },
          "riskData": {
            "$ref": "#/components/schemas/RiskData"
          },
          "samsungPayCardDetails": {
            "$ref": "#/components/schemas/SamsungPayCardDetails"
          },
          "scaExemptionRequested": {
            "type": "string",
            "enum": [
              "low_value",
              "secure_corporate",
              "trusted_beneficiary",
              "transaction_risk_analysis"
            ]
          },
          "sepaDirectDebitAccountDetails": {
            "$ref": "#/components/schemas/SepaDirectDebitAccountDetails"
          },
          "status": {
            "type": "string",
            "enum": [
              "AUTHORIZATION_EXPIRED",
              "AUTHORIZED",
              "AUTHORIZING",
              "FAILED",
              "GATEWAY_REJECTED",
              "PROCESSOR_DECLINED",
              "SETTLED",
              "SETTLEMENT_CONFIRMED",
              "SETTLEMENT_DECLINED",
              "SETTLEMENT_PENDING",
              "SETTLING",
              "SUBMITTED_FOR_SETTLEMENT",
              "UNRECOGNIZED",
              "VOIDED"
            ]
          },
          "achReturnCode": {
            "type": "string"
          },
          "acquirerReferenceNumber": {
            "type": "string"
          },
          "additionalProcessorResponse": {
            "type": "string"
          },
          "authorizedTransactionId": {
            "type": "string"
          },
          "avsErrorResponseCode": {
            "type": "string"
          },
          "avsPostalCodeResponseCode": {
            "type": "string"
          },
          "avsStreetAddressResponseCode": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "cvvResponseCode": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "merchantAccountId": {
            "type": "string"
          },
          "networkResponseCode": {
            "type": "string"
          },
          "networkResponseText": {
            "type": "string"
          },
          "networkTransactionId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "paymentInstrumentType": {
            "type": "string"
          },
          "planId": {
            "type": "string"
          },
          "processorAuthorizationCode": {
            "type": "string"
          },
          "processorResponseCode": {
            "type": "string"
          },
          "processorResponseText": {
            "type": "string"
          },
          "processorSettlementResponseCode": {
            "type": "string"
          },
          "processorSettlementResponseText": {
            "type": "string"
          },
          "purchaseOrderNumber": {
            "type": "string"
          },
          "refundedTransactionId": {
            "type": "string"
          },
          "retrievalReferenceNumber": {
            "type": "string"
          },
          "sepaDirectDebitReturnCode": {
            "type": "string"
          },
          "settlementBatchId": {
            "type": "string"
          },
          "shipsFromPostalCode": {
            "type": "string"
          },
          "subscriptionId": {
            "type": "string"
          },
          "voiceReferralNumber": {
            "type": "string"
          },
          "subscriptionDetails": {
            "$ref": "#/components/schemas/SubscriptionDetails"
          },
          "threeDSecureInfo": {
            "$ref": "#/components/schemas/ThreeDSecureInfo"
          },
          "type": {
            "type": "string",
            "enum": [
              "credit",
              "sale",
              "unrecognized"
            ]
          },
          "usBankAccountDetails": {
            "$ref": "#/components/schemas/UsBankAccountDetails"
          },
          "venmoAccountDetails": {
            "$ref": "#/components/schemas/VenmoAccountDetails"
          },
          "visaCheckoutCardDetails": {
            "$ref": "#/components/schemas/VisaCheckoutCardDetails"
          },
          "processedWithNetworkToken": {
            "type": "boolean"
          },
          "retried": {
            "type": "boolean"
          },
          "disbursed": {
            "type": "boolean"
          },
          "graphQLId": {
            "type": "string"
          },
          "payPalDetails": {
            "$ref": "#/components/schemas/PayPalDetails"
          },
          "payPalHereDetails": {
            "$ref": "#/components/schemas/PayPalHereDetails"
          }
        }
      },
      "UsBankAccount": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "accountHolderName": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "customerId": {
            "type": "string"
          },
          "achMandate": {
            "$ref": "#/components/schemas/AchMandate"
          },
          "verifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsBankAccountVerification"
            }
          },
          "default": {
            "type": "boolean"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "UsBankAccountDetails": {
        "type": "object",
        "properties": {
          "routingNumber": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "accountHolderName": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "achMandate": {
            "$ref": "#/components/schemas/AchMandate"
          }
        }
      },
      "UsBankAccountVerification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "failed",
              "gateway_rejected",
              "processor_declined",
              "unrecognized",
              "verified",
              "pending"
            ]
          },
          "verificationMethod": {
            "type": "string",
            "enum": [
              "tokenized_check",
              "network_check",
              "independent_check",
              "unrecognized",
              "micro_transfers"
            ]
          },
          "processorResponseCode": {
            "type": "string"
          },
          "processorResponseText": {
            "type": "string"
          },
          "verificationDeterminedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "gatewayRejectionReason": {
            "type": "string",
            "enum": [
              "application_incomplete",
              "avs",
              "avs_and_cvv",
              "cvv",
              "duplicate",
              "excessive_retry",
              "fraud",
              "risk_threshold",
              "three_d_secure",
              "token_issuance",
              "unrecognized"
            ]
          },
          "usBankAccount": {
            "$ref": "#/components/schemas/UsBankAccount"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "enum": [
              "ADDRESS_CANNOT_BE_BLANK",
              "ADDRESS_COMPANY_IS_INVALID",
              "ADDRESS_COMPANY_IS_TOO_LONG",
              "ADDRESS_COUNTRY_CODE_ALPHA2_IS_NOT_ACCEPTED",
              "ADDRESS_COUNTRY_CODE_ALPHA3_IS_NOT_ACCEPTED",
              "ADDRESS_COUNTRY_CODE_NUMERIC_IS_NOT_ACCEPTED",
              "ADDRESS_COUNTRY_NAME_IS_NOT_ACCEPTED",
              "ADDRESS_EXTENDED_ADDRESS_IS_INVALID",
              "ADDRESS_EXTENDED_ADDRESS_IS_TOO_LONG",
              "ADDRESS_FIRST_NAME_IS_INVALID",
              "ADDRESS_FIRST_NAME_IS_TOO_LONG",
              "ADDRESS_INCONSISTENT_COUNTRY",
              "ADDRESS_IS_INVALID",
              "ADDRESS_LAST_NAME_IS_INVALID",
              "ADDRESS_LAST_NAME_IS_TOO_LONG",
              "ADDRESS_LOCALITY_IS_INVALID",
              "ADDRESS_LOCALITY_IS_TOO_LONG",
              "ADDRESS_POSTAL_CODE_INVALID_CHARACTERS",
              "ADDRESS_POSTAL_CODE_IS_INVALID",
              "ADDRESS_POSTAL_CODE_IS_REQUIRED",
              "ADDRESS_POSTAL_CODE_IS_REQUIRED_FOR_CARD_BRAND_AND_PROCESSOR",
              "ADDRESS_POSTAL_CODE_IS_TOO_LONG",
              "ADDRESS_REGION_IS_INVALID",
              "ADDRESS_REGION_IS_TOO_LONG",
              "ADDRESS_STATE_IS_INVALID_FOR_SELLER_PROTECTION",
              "ADDRESS_STREET_ADDRESS_IS_INVALID",
              "ADDRESS_STREET_ADDRESS_IS_REQUIRED",
              "ADDRESS_STREET_ADDRESS_IS_TOO_LONG",
              "ADDRESS_TOO_MANY_ADDRESSES_PER_CUSTOMER",
              "ADJUSTMENT_AMOUNT_MUST_BE_GREATER_THAN_ZERO",
              "APPLE_PAY_CARDS_ARE_NOT_ACCEPTED",
              "APPLE_PAY_CUSTOMER_ID_IS_REQUIRED_FOR_VAULTING",
              "APPLE_PAY_TOKEN_IS_IN_USE",
              "APPLE_PAY_PAYMENT_METHOD_NONCE_CONSUMED",
              "APPLE_PAY_PAYMENT_METHOD_NONCE_UNKNOWN",
              "APPLE_PAY_PAYMENT_METHOD_NONCE_LOCKED",
              "APPLE_PAY_PAYMENT_METHOD_NONCE_CARD_TYPE_IS_NOT_ACCEPTED",
              "APPLE_PAY_CANNOT_UPDATE_APPLE_PAY_CARD_USING_PAYMENT_METHOD_NONCE",
              "APPLE_PAY_NUMBER_IS_REQUIRED",
              "APPLE_PAY_EXPIRATION_MONTH_IS_REQUIRED",
              "APPLE_PAY_EXPIRATION_YEAR_IS_REQUIRED",
              "APPLE_PAY_CRYPTOGRAM_IS_REQUIRED",
              "APPLE_PAY_DECRYPTION_FAILED",
              "APPLE_PAY_DISABLED",
              "APPLE_PAY_MERCHANT_NOT_CONFIGURED",
              "APPLE_PAY_MERCHANT_KEYS_ALREADY_CONFIGURED",
              "APPLE_PAY_MERCHANT_KEYS_NOT_CONFIGURED",
              "APPLE_PAY_CERTIFICATE_INVALID",
              "APPLE_PAY_CERTIFICATE_MISMATCH",
              "APPLE_PAY_INVALID_TOKEN",
              "APPLE_PAY_PRIVATE_KEY_MISMATCH",
              "APPLE_PAY_KEY_MISMATCH_STORING_CERTIFICATE",
              "AUTHORIZATION_FINGERPRINT_MISSING_FINGERPRINT",
              "AUTHORIZATION_FINGERPRINT_INVALID_FORMAT",
              "AUTHORIZATION_FINGERPRINT_SIGNATURE_REVOKED",
              "AUTHORIZATION_FINGERPRINT_INVALID_CREATED_AT",
              "AUTHORIZATION_FINGERPRINT_INVALID_PUBLIC_KEY",
              "AUTHORIZATION_FINGERPRINT_INVALID_SIGNATURE",
              "AUTHORIZATION_FINGERPRINT_OPTIONS_NOT_ALLOWED_WITHOUT_CUSTOMER",
              "CLIENT_TOKEN_MAKE_DEFAULT_REQUIRES_CUSTOMER_ID",
              "CLIENT_TOKEN_VERIFY_CARD_REQUIRES_CUSTOMER_ID",
              "CLIENT_TOKEN_FAIL_ON_DUPLICATE_PAYMENT_METHOD_REQUIRES_CUSTOMER_ID",
              "CLIENT_TOKEN_CUSTOMER_DOES_NOT_EXIST",
              "CLIENT_TOKEN_PROXY_MERCHANT_DOES_NOT_EXIST",
              "CLIENT_TOKEN_UNSUPPORTED_VERSION",
              "CLIENT_TOKEN_MERCHANT_ACCOUNT_DOES_NOT_EXIST",
              "CREDIT_CARD_BILLING_ADDRESS_CONFLICT",
              "CREDIT_CARD_BILLING_ADDRESS_FORMAT_IS_INVALID",
              "CREDIT_CARD_BILLING_ADDRESS_ID_IS_INVALID",
              "CREDIT_CARD_CANNOT_UPDATE_CARD_USING_PAYMENT_METHOD_NONCE",
              "CREDIT_CARD_CARDHOLDER_NAME_IS_TOO_LONG",
              "CREDIT_CARD_CREDIT_CARD_TYPE_IS_NOT_ACCEPTED",
              "CREDIT_CARD_CREDIT_CARD_TYPE_IS_NOT_ACCEPTED_BY_SUBSCRIPTION_MERCHANT_ACCOUNT",
              "CREDIT_CARD_CUSTOMER_ID_IS_INVALID",
              "CREDIT_CARD_CUSTOMER_ID_IS_REQUIRED",
              "CREDIT_CARD_CVV_IS_INVALID",
              "CREDIT_CARD_CVV_IS_REQUIRED",
              "CREDIT_CARD_CVV_VERIFICATION_FAILED",
              "CREDIT_CARD_DUPLICATE_CARD_EXISTS",
              "CREDIT_CARD_EXPIRATION_DATE_CONFLICT",
              "CREDIT_CARD_EXPIRATION_DATE_IS_INVALID",
              "CREDIT_CARD_EXPIRATION_DATE_IS_REQUIRED",
              "CREDIT_CARD_EXPIRATION_DATE_YEAR_IS_INVALID",
              "CREDIT_CARD_EXPIRATION_MONTH_IS_INVALID",
              "CREDIT_CARD_EXPIRATION_YEAR_IS_INVALID",
              "CREDIT_CARD_INVALID_PARAMS_FOR_CREDIT_CARD_UPDATE",
              "CREDIT_CARD_INVALID_VENMO_SDK_PAYMENT_METHOD_CODE",
              "CREDIT_CARD_NETWORK_TOKENIZATION_ATTRIBUTE_CRYPTOGRAM_IS_REQUIRED",
              "CREDIT_CARD_NUMBER_HAS_INVALID_LENGTH",
              "CREDIT_CARD_NUMBER_IS_INVALID",
              "CREDIT_CARD_NUMBER_IS_PROHIBITED",
              "CREDIT_CARD_NUMBER_IS_REQUIRED",
              "CREDIT_CARD_NUMBER_LENGTH_IS_INVALID",
              "CREDIT_CARD_NUMBER_MUST_BE_TEST_NUMBER",
              "CREDIT_CARD_OPTIONS_UPDATE_EXISTING_TOKEN_IS_INVALID",
              "CREDIT_CARD_OPTIONS_UPDATE_EXISTING_TOKEN_NOT_ALLOWED",
              "CREDIT_CARD_OPTIONS_VERIFICATION_AMOUNT_CANNOT_BE_NEGATIVE",
              "CREDIT_CARD_OPTIONS_VERIFICATION_AMOUNT_FORMAT_IS_INVALID",
              "CREDIT_CARD_OPTIONS_VERIFICATION_AMOUNT_IS_TOO_LARGE",
              "CREDIT_CARD_OPTIONS_VERIFICATION_AMOUNT_NOT_SUPPORTED_BY_PROCESSOR",
              "CREDIT_CARD_OPTIONS_VERIFICATION_MERCHANT_ACCOUNT_ID_IS_INVALID",
              "CREDIT_CARD_OPTIONS_VERIFICATION_MERCHANT_ACCOUNT_IS_FORBIDDEN",
              "CREDIT_CARD_OPTIONS_VERIFICATION_MERCHANT_ACCOUNT_IS_SUSPENDED",
              "CREDIT_CARD_OPTIONS_VERIFICATION_MERCHANT_ACCOUNT_CANNOT_BE_SUB_MERCHANT_ACCOUNT",
              "CREDIT_CARD_OPTIONS_VERIFICATION_ACCOUNT_TYPE_IS_INVALID",
              "CREDIT_CARD_OPTIONS_VERIFICATION_ACCOUNT_TYPE_NOT_SUPPORTED",
              "CREDIT_CARD_OPTIONS_VERIFICATION_INVALID_PRESENTMENT_CURRENCY",
              "CREDIT_CARD_PAYMENT_METHOD_CONFLICT",
              "CREDIT_CARD_PAYMENT_METHOD_IS_NOT_A_CREDIT_CARD",
              "CREDIT_CARD_PAYMENT_METHOD_NONCE_CARD_TYPE_IS_NOT_ACCEPTED",
              "CREDIT_CARD_PAYMENT_METHOD_NONCE_CONSUMED",
              "CREDIT_CARD_PAYMENT_METHOD_NONCE_LOCKED",
              "CREDIT_CARD_PAYMENT_METHOD_NONCE_UNKNOWN",
              "CREDIT_CARD_POSTAL_CODE_VERIFICATION_FAILED",
              "CREDIT_CARD_TOKEN_FORMAT_IS_INVALID",
              "CREDIT_CARD_TOKEN_INVALID",
              "CREDIT_CARD_TOKEN_IS_IN_USE",
              "CREDIT_CARD_TOKEN_IS_NOT_ALLOWED",
              "CREDIT_CARD_TOKEN_IS_REQUIRED",
              "CREDIT_CARD_TOKEN_IS_TOO_LONG",
              "CREDIT_CARD_VENMO_SDK_PAYMENT_METHOD_CODE_CARD_TYPE_IS_NOT_ACCEPTED",
              "CREDIT_CARD_VERIFICATION_NOT_SUPPORTED_ON_THIS_MERCHANT_ACCOUNT",
              "CUSTOMER_COMPANY_IS_TOO_LONG",
              "CUSTOMER_CUSTOM_FIELD_IS_INVALID",
              "CUSTOMER_CUSTOM_FIELD_IS_TOO_LONG",
              "CUSTOMER_EMAIL_FORMAT_IS_INVALID",
              "CUSTOMER_EMAIL_IS_INVALID",
              "CUSTOMER_EMAIL_IS_REQUIRED",
              "CUSTOMER_EMAIL_IS_TOO_LONG",
              "CUSTOMER_FAX_IS_TOO_LONG",
              "CUSTOMER_FIRST_NAME_IS_TOO_LONG",
              "CUSTOMER_ID_IS_IN_USE",
              "CUSTOMER_ID_IS_NOT_ALLOWED",
              "CUSTOMER_ID_IS_REQUIRED",
              "CUSTOMER_ID_IS_TOO_LONG",
              "CUSTOMER_LAST_NAME_IS_TOO_LONG",
              "CUSTOMER_PHONE_IS_TOO_LONG",
              "CUSTOMER_VAULTED_PAYMENT_INSTRUMENT_NONCE_BELONGS_TO_DIFFERENT_CUSTOMER",
              "CUSTOMER_WEBSITE_FORMAT_IS_INVALID",
              "CUSTOMER_WEBSITE_IS_INVALID",
              "CUSTOMER_WEBSITE_IS_TOO_LONG",
              "DESCRIPTOR_DYNAMIC_DESCRIPTORS_DISABLED",
              "DESCRIPTOR_INTERNATIONAL_NAME_FORMAT_IS_INVALID",
              "DESCRIPTOR_INTERNATIONAL_PHONE_FORMAT_IS_INVALID",
              "DESCRIPTOR_NAME_FORMAT_IS_INVALID",
              "DESCRIPTOR_PHONE_FORMAT_IS_INVALID",
              "DESCRIPTOR_URL_FORMAT_IS_INVALID",
              "DISPUTE_CAN_ONLY_ADD_EVIDENCE_TO_OPEN_DISPUTE",
              "DISPUTE_CAN_ONLY_REMOVE_EVIDENCE_FROM_OPEN_DISPUTE",
              "DISPUTE_CAN_ONLY_ADD_EVIDENCE_DOCUMENT_TO_DISPUTE",
              "DISPUTE_CAN_ONLY_ACCEPT_OPEN_DISPUTE",
              "DISPUTE_CAN_ONLY_FINALIZE_OPEN_DISPUTE",
              "DISPUTE_CAN_ONLY_CREATE_EVIDENCE_WITH_VALID_CATEGORY",
              "DISPUTE_EVIDENCE_CONTENT_DATE_INVALID",
              "DISPUTE_EVIDENCE_CONTENT_TOO_LONG",
              "DISPUTE_EVIDENCE_CONTENT_ARN_TOO_LONG",
              "DISPUTE_EVIDENCE_CONTENT_PHONE_TOO_LONG",
              "DISPUTE_EVIDENCE_CATEGORY_TEXT_ONLY",
              "DISPUTE_EVIDENCE_CATEGORY_DOCUMENT_ONLY",
              "DISPUTE_EVIDENCE_CATEGORY_NOT_FOR_REASON_CODE",
              "DISPUTE_EVIDENCE_CATEGORY_DUPLICATE",
              "DISPUTE_EVIDENCE_CONTENT_EMAIL_INVALID",
              "DISPUTE_DIGITAL_GOODS_MISSING_EVIDENCE",
              "DISPUTE_DIGITAL_GOODS_MISSING_DOWNLOAD_DATE",
              "DISPUTE_NON_DISPUTED_PRIOR_TRANSACTION_EVIDENCE_MISSING_ARN",
              "DISPUTE_NON_DISPUTED_PRIOR_TRANSACTION_EVIDENCE_MISSING_DATE",
              "DISPUTE_RECURRING_TRANSACTION_EVIDENCE_MISSING_DATE",
              "DISPUTE_RECURRING_TRANSACTION_EVIDENCE_MISSING_ARN",
              "DISPUTE_VALID_EVIDENCE_REQUIRED_TO_FINALIZE",
              "EXCHANGE_RATE_QUOTE_ID_TOO_LONG",
              "FAILED_AUTH_ADJUSTMENT_ALLOW_RETRY",
              "FAILED_AUTH_ADJUSTMENT_HARD_DECLINE",
              "FINAL_AUTH_SUBMIT_FOR_SETTLEMENT_FOR_DIFFERENT_AMOUNT",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_ARRIVAL_AIRPORT_CODE_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_ARRIVAL_TIME_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_CARRIER_CODE_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_CONJUNCTION_TICKET_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_COUPON_NUMBER_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_DEPARTURE_AIRPORT_CODE_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_DEPARTURE_TIME_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_EXCHANGE_TICKET_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_FARE_AMOUNT_CANNOT_BE_NEGATIVE",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_FARE_AMOUNT_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_FARE_AMOUNT_IS_TOO_LARGE",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_FARE_BASIS_CODE_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_FEE_AMOUNT_CANNOT_BE_NEGATIVE",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_FEE_AMOUNT_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_FEE_AMOUNT_IS_TOO_LARGE",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_SERVICE_CLASS_IS_TOO_LONG",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_TAX_AMOUNT_CANNOT_BE_NEGATIVE",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_TAX_AMOUNT_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_TAX_AMOUNT_IS_TOO_LARGE",
              "INDUSTRY_DATA_LEG_TRAVEL_FLIGHT_TICKET_NUMBER_IS_TOO_LONG",
              "INDUSTRY_DATA_INDUSTRY_TYPE_IS_INVALID",
              "INDUSTRY_DATA_LODGING_EMPTY_DATA",
              "INDUSTRY_DATA_LODGING_FOLIO_NUMBER_IS_INVALID",
              "INDUSTRY_DATA_LODGING_CHECK_IN_DATE_IS_INVALID",
              "INDUSTRY_DATA_LODGING_CHECK_OUT_DATE_IS_INVALID",
              "INDUSTRY_DATA_LODGING_CHECK_OUT_DATE_MUST_FOLLOW_CHECK_IN_DATE",
              "INDUSTRY_DATA_LODGING_UNKNOWN_DATA_FIELD",
              "INDUSTRY_DATA_TRAVEL_CRUISE_EMPTY_DATA",
              "INDUSTRY_DATA_TRAVEL_CRUISE_UNKNOWN_DATA_FIELD",
              "INDUSTRY_DATA_TRAVEL_CRUISE_TRAVEL_PACKAGE_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_CRUISE_DEPARTURE_DATE_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_CRUISE_LODGING_CHECK_IN_DATE_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_CRUISE_LODGING_CHECKOUT_DATE_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_EMPTY_DATA",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_UNKNOWN_DATA_FIELD",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_CUSTOMER_CODE_IS_TOO_LONG",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_FARE_AMOUNT_CANNOT_BE_NEGATIVE",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_FARE_AMOUNT_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_FARE_AMOUNT_IS_TOO_LARGE",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_FEE_AMOUNT_CANNOT_BE_NEGATIVE",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_FEE_AMOUNT_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_FEE_AMOUNT_IS_TOO_LARGE",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_ISSUED_DATE_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_ISSUING_CARRIER_CODE_IS_TOO_LONG",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_PASSENGER_MIDDLE_INITIAL_IS_TOO_LONG",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_RESTRICTED_TICKET_IS_REQUIRED",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_TAX_AMOUNT_CANNOT_BE_NEGATIVE",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_TAX_AMOUNT_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_TAX_AMOUNT_IS_TOO_LARGE",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_TICKET_NUMBER_IS_TOO_LONG",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_LEGS_EXPECTED",
              "INDUSTRY_DATA_TRAVEL_FLIGHT_TOO_MANY_LEGS",
              "INDUSTRY_DATA_LODGING_ROOM_RATE_MUST_BE_GREATER_THAN_ZERO",
              "INDUSTRY_DATA_LODGING_ROOM_RATE_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_LODGING_ROOM_RATE_IS_TOO_LARGE",
              "INDUSTRY_DATA_LODGING_ROOM_TAX_MUST_BE_GREATER_THAN_ZERO",
              "INDUSTRY_DATA_LODGING_ROOM_TAX_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_LODGING_ROOM_TAX_IS_TOO_LARGE",
              "INDUSTRY_DATA_LODGING_NO_SHOW_INIDICATOR_IS_INVALID",
              "INDUSTRY_DATA_LODGING_ADVANCED_DEPOSIT_INIDICATOR_IS_INVALID",
              "INDUSTRY_DATA_LODGING_FIRE_SAFETY_INIDICATOR_IS_INVALID",
              "INDUSTRY_DATA_LODGING_PROPERTY_PHONE_IS_INVALID",
              "INDUSTRY_DATA_ADDITIONAL_CHARGE_KIND_IS_INVALID",
              "INDUSTRY_DATA_ADDITIONAL_CHARGE_KIND_MUST_BE_UNIQUE",
              "INDUSTRY_DATA_ADDITIONAL_CHARGE_AMOUNT_MUST_BE_GREATER_THAN_ZERO",
              "INDUSTRY_DATA_ADDITIONAL_CHARGE_AMOUNT_FORMAT_IS_INVALID",
              "INDUSTRY_DATA_ADDITIONAL_CHARGE_AMOUNT_IS_TOO_LARGE",
              "INDUSTRY_DATA_ADDITIONAL_CHARGE_AMOUNT_IS_REQUIRED",
              "NO_NET_AMOUNT_TO_PERFORM_AUTH_ADJUSTMENT",
              "TRANSACTION_LINE_ITEM_COMMODITY_CODE_IS_TOO_LONG",
              "TRANSACTION_LINE_ITEM_DESCRIPTION_IS_TOO_LONG",
              "TRANSACTION_LINE_ITEM_DISCOUNT_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_LINE_ITEM_DISCOUNT_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_LINE_ITEM_DISCOUNT_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_LINE_ITEM_KIND_IS_INVALID",
              "TRANSACTION_LINE_ITEM_KIND_IS_REQUIRED",
              "TRANSACTION_LINE_ITEM_NAME_IS_REQUIRED",
              "TRANSACTION_LINE_ITEM_NAME_IS_TOO_LONG",
              "TRANSACTION_LINE_ITEM_PRODUCT_CODE_IS_TOO_LONG",
              "TRANSACTION_LINE_ITEM_QUANTITY_FORMAT_IS_INVALID",
              "TRANSACTION_LINE_ITEM_QUANTITY_IS_REQUIRED",
              "TRANSACTION_LINE_ITEM_QUANTITY_IS_TOO_LARGE",
              "TRANSACTION_LINE_ITEM_TOTAL_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_LINE_ITEM_TOTAL_AMOUNT_IS_REQUIRED",
              "TRANSACTION_LINE_ITEM_TOTAL_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_LINE_ITEM_TOTAL_AMOUNT_MUST_BE_GREATER_THAN_ZERO",
              "TRANSACTION_LINE_ITEM_UNIT_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_LINE_ITEM_UNIT_AMOUNT_IS_REQUIRED",
              "TRANSACTION_LINE_ITEM_UNIT_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_LINE_ITEM_UNIT_AMOUNT_MUST_BE_GREATER_THAN_ZERO",
              "TRANSACTION_LINE_ITEM_UNIT_OF_MEASURE_IS_TOO_LONG",
              "TRANSACTION_LINE_ITEM_UNIT_TAX_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_LINE_ITEM_UNIT_TAX_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_LINE_ITEM_UNIT_TAX_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_LINE_ITEM_TAX_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_LINE_ITEM_TAX_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_LINE_ITEM_TAX_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_SCA_EXEMPTION_IS_INVALID",
              "TRANSACTION_PAYMENT_INSTRUMENT_WITH_EXTERNAL_VAULT_IS_INVALID",
              "TRANSACTION_EXTERNAL_VAULT_STATUS_WITH_PREVIOUS_NETWORK_TRANSACTION_ID_IS_INVALID",
              "TRANSACTION_EXTERNAL_VAULT_CARD_TYPE_IS_INVALID",
              "TRANSACTION_EXTERNAL_VAULT_PREVIOUS_NETWORK_TRANSACTION_ID_IS_INVALID",
              "OAUTH_INVALID_GRANT",
              "OAUTH_INVALID_CREDENTIALS",
              "OAUTH_INVALID_SCOPE",
              "OAUTH_INVALID_REQUEST",
              "OAUTH_UNSUPPORTED_GRANT_TYPE",
              "PAYMENT_METHOD_CUSTOMER_ID_IS_INVALID",
              "PAYMENT_METHOD_CUSTOMER_ID_IS_REQUIRED",
              "PAYMENT_METHOD_NONCE_IS_INVALID",
              "PAYMENT_METHOD_PAYMENT_METHOD_PARAMS_ARE_REQUIRED",
              "PAYMENT_METHOD_PARAMS_ARE_REQUIRED",
              "PAYMENT_METHOD_NONCE_IS_REQUIRED",
              "PAYMENT_METHOD_CANNOT_FORWARD_PAYMENT_METHOD_TYPE",
              "PAYMENT_METHOD_PAYMENT_METHOD_NONCE_CONSUMED",
              "PAYMENT_METHOD_PAYMENT_METHOD_NONCE_UNKNOWN",
              "PAYMENT_METHOD_PAYMENT_METHOD_NONCE_LOCKED",
              "PAYMENT_METHOD_NO_LONGER_SUPPORTED",
              "PAYMENT_METHOD_OPTIONS_US_BANK_ACCOUNT_VERIFICATION_METHOD_IS_INVALID",
              "PAYPAL_ACCOUNT_AUTH_EXPIRED",
              "PAYPAL_ACCOUNT_CANNOT_HAVE_BOTH_ACCESS_TOKEN_AND_CONSENT_CODE",
              "PAYPAL_ACCOUNT_CANNOT_HAVE_FUNDING_SOURCE_WITHOUT_ACCESS_TOKEN",
              "PAYPAL_ACCOUNT_CANNOT_UPDATE_PAYPAL_ACCOUNT_USING_PAYMENT_METHOD_NONCE",
              "PAYPAL_ACCOUNT_CANNOT_VAULT_ONE_TIME_USE_PAYPAL_ACCOUNT",
              "PAYPAL_ACCOUNT_CONSENT_CODE_OR_ACCESS_TOKEN_IS_REQUIRED",
              "PAYPAL_ACCOUNT_CUSTOMER_ID_IS_REQUIRED_FOR_VAULTING",
              "PAYPAL_ACCOUNT_INVALID_FUNDING_SOURCE_SELECTION",
              "PAYPAL_ACCOUNT_INVALID_PARAMS_FOR_PAYPAL_ACCOUNT_UPDATE",
              "PAYPAL_ACCOUNT_PAYMENT_METHOD_NONCE_CONSUMED",
              "PAYPAL_ACCOUNT_PAYMENT_METHOD_NONCE_LOCKED",
              "PAYPAL_ACCOUNT_PAYMENT_METHOD_NONCE_UNKNOWN",
              "PAYPAL_ACCOUNT_PAYPAL_ACCOUNTS_ARE_NOT_ACCEPTED",
              "PAYPAL_ACCOUNT_PAYPAL_COMMUNICATION_ERROR",
              "PAYPAL_ACCOUNT_TOKEN_IS_IN_USE",
              "PROCESSOR_DOES_NOT_SUPPORT_AUTH_ADJUSTMENT",
              "PROCESSOR_DOES_NOT_SUPPORT_INCREMENTAL_AUTH",
              "PROCESSOR_DOES_NOT_SUPPORT_PARTIAL_AUTH_REVERSAL",
              "DOCUMENT_UPLOAD_KIND_IS_INVALID",
              "DOCUMENT_UPLOAD_FILE_IS_TOO_LARGE",
              "DOCUMENT_UPLOAD_FILE_TYPE_IS_INVALID",
              "DOCUMENT_UPLOAD_FILE_IS_MALFORMED_OR_ENCRYPTED",
              "DOCUMENT_UPLOAD_FILE_IS_TOO_LONG",
              "DOCUMENT_UPLOAD_FILE_IS_EMPTY",
              "SEPA_DEBIT_ACCOUNT_PAYMENT_METHOD_MANDATE_TYPE_IS_NOT_SUPPORTED",
              "SEPA_DEBIT_ACCOUNT_PAYMENT_METHOD_CUSTOMER_ID_IS_INVALID",
              "SEPA_DEBIT_ACCOUNT_PAYMENT_METHOD_CUSTOMER_ID_IS_REQUIRED",
              "SETTLEMENT_BATCH_SUMMARY_SETTLEMENT_DATE_IS_INVALID",
              "SETTLEMENT_BATCH_SUMMARY_SETTLEMENT_DATE_IS_REQUIRED",
              "SETTLEMENT_BATCH_SUMMARY_CUSTOM_FIELD_IS_INVALID",
              "SUBSCRIPTION_BILLING_DAY_OF_MONTH_CANNOT_BE_UPDATED",
              "SUBSCRIPTION_BILLING_DAY_OF_MONTH_IS_INVALID",
              "SUBSCRIPTION_BILLING_DAY_OF_MONTH_MUST_BE_NUMERIC",
              "SUBSCRIPTION_CANNOT_ADD_DUPLICATE_ADDON_OR_DISCOUNT",
              "SUBSCRIPTION_CANNOT_EDIT_CANCELED_SUBSCRIPTION",
              "SUBSCRIPTION_CANNOT_EDIT_EXPIRED_SUBSCRIPTION",
              "SUBSCRIPTION_CANNOT_EDIT_PRICE_CHANGING_FIELDS_ON_PAST_DUE_SUBSCRIPTION",
              "SUBSCRIPTION_FIRST_BILLING_DATE_CANNOT_BE_IN_THE_PAST",
              "SUBSCRIPTION_FIRST_BILLING_DATE_CANNOT_BE_UPDATED",
              "SUBSCRIPTION_FIRST_BILLING_DATE_IS_INVALID",
              "SUBSCRIPTION_ID_IS_IN_USE",
              "SUBSCRIPTION_INCONSISTENT_NUMBER_OF_BILLING_CYCLES",
              "SUBSCRIPTION_INCONSISTENT_START_DATE",
              "SUBSCRIPTION_INVALID_REQUEST_FORMAT",
              "SUBSCRIPTION_MERCHANT_ACCOUNT_DOES_NOT_SUPPORT_INSTRUMENT_TYPE",
              "SUBSCRIPTION_MERCHANT_ACCOUNT_ID_IS_INVALID",
              "SUBSCRIPTION_MISMATCH_CURRENCY_ISO_CODE",
              "SUBSCRIPTION_MODIFICATION_ID_TO_REMOVE_IS_INVALID",
              "SUBSCRIPTION_NUMBER_OF_BILLING_CYCLES_CANNOT_BE_BLANK",
              "SUBSCRIPTION_NUMBER_OF_BILLING_CYCLES_IS_TOO_SMALL",
              "SUBSCRIPTION_NUMBER_OF_BILLING_CYCLES_MUST_BE_GREATER_THAN_ZERO",
              "SUBSCRIPTION_NUMBER_OF_BILLING_CYCLES_MUST_BE_NUMERIC",
              "SUBSCRIPTION_PAYMENT_METHOD_NONCE_CARD_TYPE_IS_NOT_ACCEPTED",
              "SUBSCRIPTION_PAYMENT_METHOD_NONCE_INSTRUMENT_TYPE_DOES_NOT_SUPPORT_SUBSCRIPTIONS",
              "SUBSCRIPTION_PAYMENT_METHOD_NONCE_IS_INVALID",
              "SUBSCRIPTION_PAYMENT_METHOD_NONCE_NOT_ASSOCIATED_WITH_CUSTOMER",
              "SUBSCRIPTION_PAYMENT_METHOD_NONCE_UNVAULTED_CARD_IS_NOT_ACCEPTED",
              "SUBSCRIPTION_PAYMENT_METHOD_TOKEN_CARD_TYPE_IS_NOT_ACCEPTED",
              "SUBSCRIPTION_PAYMENT_METHOD_TOKEN_INSTRUMENT_TYPE_DOES_NOT_SUPPORT_SUBSCRIPTIONS",
              "SUBSCRIPTION_PAYMENT_METHOD_TOKEN_IS_INVALID",
              "SUBSCRIPTION_PAYMENT_METHOD_TOKEN_NOT_ASSOCIATED_WITH_CUSTOMER",
              "SUBSCRIPTION_PLAN_BILLING_FREQUENCY_CANNOT_BE_UPDATED",
              "SUBSCRIPTION_PLAN_ID_IS_INVALID",
              "SUBSCRIPTION_PRICE_CANNOT_BE_BLANK",
              "SUBSCRIPTION_PRICE_FORMAT_IS_INVALID",
              "SUBSCRIPTION_PRICE_IS_TOO_LARGE",
              "SUBSCRIPTION_STATUS_IS_CANCELED",
              "SUBSCRIPTION_TOKEN_FORMAT_IS_INVALID",
              "SUBSCRIPTION_TRIAL_DURATION_FORMAT_IS_INVALID",
              "SUBSCRIPTION_TRIAL_DURATION_IS_REQUIRED",
              "SUBSCRIPTION_TRIAL_DURATION_UNIT_IS_INVALID",
              "SUBSCRIPTION_MODIFICATION_AMOUNT_CANNOT_BE_BLANK",
              "SUBSCRIPTION_MODIFICATION_AMOUNT_IS_INVALID",
              "SUBSCRIPTION_MODIFICATION_AMOUNT_IS_TOO_LARGE",
              "SUBSCRIPTION_MODIFICATION_CANNOT_EDIT_MODIFICATIONS_ON_PAST_DUE_SUBSCRIPTION",
              "SUBSCRIPTION_MODIFICATION_CANNOT_UPDATE_AND_REMOVE",
              "SUBSCRIPTION_MODIFICATION_EXISTING_ID_IS_INCORRECT_KIND",
              "SUBSCRIPTION_MODIFICATION_EXISTING_ID_IS_INVALID",
              "SUBSCRIPTION_MODIFICATION_EXISTING_ID_IS_REQUIRED",
              "SUBSCRIPTION_MODIFICATION_ID_TO_REMOVE_IS_INCORRECT_KIND",
              "SUBSCRIPTION_MODIFICATION_ID_TO_REMOVE_IS_NOT_PRESENT",
              "SUBSCRIPTION_MODIFICATION_INCONSISTENT_NUMBER_OF_BILLING_CYCLES",
              "SUBSCRIPTION_MODIFICATION_INHERITED_FROM_ID_IS_INVALID",
              "SUBSCRIPTION_MODIFICATION_INHERITED_FROM_ID_IS_REQUIRED",
              "SUBSCRIPTION_MODIFICATION_MISSING",
              "SUBSCRIPTION_MODIFICATION_NUMBER_OF_BILLING_CYCLES_CANNOT_BE_BLANK",
              "SUBSCRIPTION_MODIFICATION_NUMBER_OF_BILLING_CYCLES_IS_INVALID",
              "SUBSCRIPTION_MODIFICATION_NUMBER_OF_BILLING_CYCLES_MUST_BE_GREATER_THAN_ZERO",
              "SUBSCRIPTION_MODIFICATION_QUANTITY_CANNOT_BE_BLANK",
              "SUBSCRIPTION_MODIFICATION_QUANTITY_IS_INVALID",
              "SUBSCRIPTION_MODIFICATION_QUANTITY_MUST_BE_GREATER_THAN_ZERO",
              "TRANSACTION_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_AMOUNT_DOES_NOT_MATCH3_D_SECURE_AMOUNT",
              "TRANSACTION_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_AMOUNT_IS_INVALID",
              "TRANSACTION_AMOUNT_IS_REQUIRED",
              "TRANSACTION_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_AMOUNT_MUST_BE_GREATER_THAN_ZERO",
              "TRANSACTION_AMOUNT_NOT_SUPPORTED_BY_PROCESSOR",
              "TRANSACTION_BILLING_ADDRESS_CONFLICT",
              "TRANSACTION_CANNOT_BE_VOIDED",
              "TRANSACTION_CANNOT_CANCEL_RELEASE",
              "TRANSACTION_CANNOT_CLONE_CREDIT",
              "TRANSACTION_CANNOT_CLONE_MARKETPLACE_TRANSACTION",
              "TRANSACTION_CANNOT_CLONE_TRANSACTION_WITH_PAYPAL_ACCOUNT",
              "TRANSACTION_CANNOT_CLONE_TRANSACTION_WITH_VAULT_CREDIT_CARD",
              "TRANSACTION_CANNOT_CLONE_UNSUCCESSFUL_TRANSACTION",
              "TRANSACTION_CANNOT_CLONE_VOICE_AUTHORIZATIONS",
              "TRANSACTION_CANNOT_HOLD_IN_ESCROW",
              "TRANSACTION_CANNOT_PARTIALLY_REFUND_ESCROWED_TRANSACTION",
              "TRANSACTION_CANNOT_REFUND_CREDIT",
              "TRANSACTION_CANNOT_REFUND_SETTLING_TRANSACTION",
              "TRANSACTION_CANNOT_REFUND_UNLESS_SETTLED",
              "TRANSACTION_CANNOT_REFUND_WITH_PENDING_MERCHANT_ACCOUNT",
              "TRANSACTION_CANNOT_REFUND_WITH_SUSPENDED_MERCHANT_ACCOUNT",
              "TRANSACTION_CANNOT_RELEASE_FROM_ESCROW",
              "TRANSACTION_CANNOT_SUBMIT_FOR_PARTIAL_SETTLEMENT",
              "TRANSACTION_CANNOT_SUBMIT_FOR_SETTLEMENT",
              "TRANSACTION_CANNOT_UPDATE_DETAILS_NOT_SUBMITTED_FOR_SETTLEMENT",
              "TRANSACTION_CHANNEL_IS_TOO_LONG",
              "TRANSACTION_CREDIT_CARD_IS_REQUIRED",
              "TRANSACTION_CUSTOM_FIELD_IS_INVALID",
              "TRANSACTION_CUSTOM_FIELD_IS_TOO_LONG",
              "TRANSACTION_CUSTOMER_DEFAULT_PAYMENT_METHOD_CARD_TYPE_IS_NOT_ACCEPTED",
              "TRANSACTION_CUSTOMER_DOES_NOT_HAVE_CREDIT_CARD",
              "TRANSACTION_CUSTOMER_ID_IS_INVALID",
              "TRANSACTION_HAS_ALREADY_BEEN_REFUNDED",
              "TRANSACTION_TOO_MANY_LINE_ITEMS",
              "TRANSACTION_LINE_ITEMS_EXPECTED",
              "TRANSACTION_DISCOUNT_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_DISCOUNT_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_DISCOUNT_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_IS_NOT_ELIGIBLE_FOR_ADJUSTMENT",
              "TRANSACTION_SHIPPING_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_SHIPPING_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_SHIPPING_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_SHIPS_FROM_POSTAL_CODE_IS_TOO_LONG",
              "TRANSACTION_SHIPS_FROM_POSTAL_CODE_IS_INVALID",
              "TRANSACTION_SHIPS_FROM_POSTAL_CODE_INVALID_CHARACTERS",
              "TRANSACTION_MERCHANT_ACCOUNT_DOES_NOT_MATCH3_D_SECURE_MERCHANT_ACCOUNT",
              "TRANSACTION_MERCHANT_ACCOUNT_DOES_NOT_SUPPORT_MOTO",
              "TRANSACTION_MERCHANT_ACCOUNT_DOES_NOT_SUPPORT_REFUNDS",
              "TRANSACTION_MERCHANT_ACCOUNT_ID_DOES_NOT_MATCH_SUBSCRIPTION",
              "TRANSACTION_MERCHANT_ACCOUNT_ID_IS_INVALID",
              "TRANSACTION_MERCHANT_ACCOUNT_IS_SUSPENDED",
              "TRANSACTION_MUST_BE_IN_STATE_AUTHORIZED",
              "TRANSACTION_OPTIONS_PAY_PAL_CUSTOM_FIELD_TOO_LONG",
              "TRANSACTION_OPTIONS_SUBMIT_FOR_SETTLEMENT_IS_REQUIRED_FOR_CLONING",
              "TRANSACTION_OPTIONS_SUBMIT_FOR_SETTLEMENT_IS_REQUIRED_FOR_PAYPAL_UNILATERAL",
              "TRANSACTION_OPTIONS_USE_BILLING_FOR_SHIPPING_DISABLED",
              "TRANSACTION_OPTIONS_VAULT_IS_DISABLED",
              "TRANSACTION_OPTIONS_CREDIT_CARD_ACCOUNT_TYPE_IS_INVALID",
              "TRANSACTION_OPTIONS_CREDIT_CARD_ACCOUNT_TYPE_NOT_SUPPORTED",
              "TRANSACTION_OPTIONS_CREDIT_CARD_ACCOUNT_TYPE_DEBIT_DOES_NOT_SUPPORT_AUTHS",
              "TRANSACTION_INVALID_PRESENTMENT_CURRENCY",
              "TRANSACTION_ORDER_ID_IS_TOO_LONG",
              "TRANSACTION_PAY_PAL_AUTH_EXPIRED",
              "TRANSACTION_PAY_PAL_VAULT_RECORD_MISSING_DATA",
              "TRANSACTION_PAYMENT_INSTRUMENT_NOT_SUPPORTED_BY_MERCHANT_ACCOUNT",
              "TRANSACTION_PAYMENT_INSTRUMENT_TYPE_IS_NOT_ACCEPTED",
              "TRANSACTION_PAYMENT_METHOD_CONFLICT",
              "TRANSACTION_PAYMENT_METHOD_CONFLICT_WITH_VENMO_SDK",
              "TRANSACTION_PAYMENT_METHOD_DOES_NOT_BELONG_TO_CUSTOMER",
              "TRANSACTION_PAYMENT_METHOD_DOES_NOT_BELONG_TO_SUBSCRIPTION",
              "TRANSACTION_PAYMENT_METHOD_NONCE_CARD_TYPE_IS_NOT_ACCEPTED",
              "TRANSACTION_PAYMENT_METHOD_NONCE_CONSUMED",
              "TRANSACTION_PAYMENT_METHOD_NONCE_HAS_NO_VALID_PAYMENT_INSTRUMENT_TYPE",
              "TRANSACTION_PAYMENT_METHOD_NONCE_LOCKED",
              "TRANSACTION_PAYMENT_METHOD_NONCE_UNKNOWN",
              "TRANSACTION_PAYMENT_METHOD_TOKEN_CARD_TYPE_IS_NOT_ACCEPTED",
              "TRANSACTION_PAYMENT_METHOD_TOKEN_IS_INVALID",
              "TRANSACTION_PAYPAL_NOT_ENABLED",
              "TRANSACTION_PROCESSOR_AUTHORIZATION_CODE_CANNOT_BE_SET",
              "TRANSACTION_PROCESSOR_AUTHORIZATION_CODE_IS_INVALID",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_AUTHS",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_CREDITS",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_MOTO_FOR_CARD_TYPE",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_PARTIAL_SETTLEMENT",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_UPDATING_DESCRIPTOR",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_UPDATING_DETAILS",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_UPDATING_ORDER_ID",
              "TRANSACTION_PROCESSOR_DOES_NOT_SUPPORT_VOICE_AUTHORIZATIONS",
              "TRANSACTION_PRODUCT_SKU_IS_INVALID",
              "TRANSACTION_PURCHASE_ORDER_NUMBER_IS_INVALID",
              "TRANSACTION_PURCHASE_ORDER_NUMBER_IS_TOO_LONG",
              "TRANSACTION_REFUND_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_REFUND_AUTH_HARD_DECLINED",
              "TRANSACTION_REFUND_AUTH_SOFT_DECLINED",
              "TRANSACTION_SHIPPING_PHONE_NUMBER_IS_INVALID",
              "TRANSACTION_BILLING_PHONE_NUMBER_IS_INVALID",
              "TRANSACTION_SERVICE_FEE_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_SERVICE_FEE_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_SERVICE_FEE_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_SERVICE_FEE_AMOUNT_NOT_ALLOWED_ON_MASTER_MERCHANT_ACCOUNT",
              "TRANSACTION_SERVICE_FEE_IS_NOT_ALLOWED_ON_CREDITS",
              "TRANSACTION_SERVICE_FEE_NOT_ACCEPTED_FOR_PAYPAL",
              "TRANSACTION_SETTLEMENT_AMOUNT_IS_LESS_THAN_SERVICE_FEE_AMOUNT",
              "TRANSACTION_SETTLEMENT_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_SHIPPING_ADDRESS_DOESNT_MATCH_CUSTOMER",
              "TRANSACTION_SUB_MERCHANT_ACCOUNT_REQUIRES_SERVICE_FEE_AMOUNT",
              "TRANSACTION_SUBSCRIPTION_DOES_NOT_BELONG_TO_CUSTOMER",
              "TRANSACTION_SUBSCRIPTION_ID_IS_INVALID",
              "TRANSACTION_SUBSCRIPTION_STATUS_MUST_BE_PAST_DUE",
              "TRANSACTION_TAX_AMOUNT_CANNOT_BE_NEGATIVE",
              "TRANSACTION_TAX_AMOUNT_FORMAT_IS_INVALID",
              "TRANSACTION_TAX_AMOUNT_IS_REQUIRED_FOR_AIB_SWEDISH",
              "TRANSACTION_TAX_AMOUNT_IS_TOO_LARGE",
              "TRANSACTION_US_BANK_ACCOUNT_NONCE_MUST_BE_PLAID_VERIFIED",
              "TRANSACTION_US_BANK_ACCOUNT_NOT_VERIFIED",
              "TRANSACTION_THREE_D_SECURE_AUTHENTICATION_FAILED",
              "TRANSACTION_THREE_D_SECURE_TOKEN_IS_INVALID",
              "TRANSACTION_THREE_D_SECURE_TRANSACTION_DATA_DOESNT_MATCH_VERIFY",
              "TRANSACTION_THREE_D_SECURE_AUTHENTICATION_ID_IS_INVALID",
              "TRANSACTION_THREE_D_SECURE_TRANSACTION_PAYMENT_METHOD_DOESNT_MATCH_THREE_D_SECURE_AUTHENTICATION_PAYMENT_METHOD",
              "TRANSACTION_THREE_D_SECURE_AUTHENTICATION_ID_DOESNT_MATCH_NONCE_THREE_D_SECURE_AUTHENTICATION",
              "TRANSACTION_THREE_D_SECURE_AUTHENTICATION_ID_WITH_THREE_D_SECURE_PASSTHRU_IS_INVALID",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_ECI_FLAG_IS_REQUIRED",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_CAVV_IS_REQUIRED",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_XID_IS_REQUIRED",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_ECI_FLAG_IS_INVALID",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_MERCHANT_ACCOUNT_DOES_NOT_SUPPORT_CARD_TYPE",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_AUTHENTICATION_RESPONSE_IS_INVALID",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_DIRECTORY_RESPONSE_IS_INVALID",
              "TRANSACTION_THREE_D_SECURE_PASS_THRU_CAVV_ALGORITHM_IS_INVALID",
              "TRANSACTION_TYPE_IS_INVALID",
              "TRANSACTION_TYPE_IS_REQUIRED",
              "TRANSACTION_UNSUPPORTED_VOICE_AUTHORIZATION",
              "TRANSACTION_TRANSACTION_SOURCE_IS_INVALID",
              "TRANSACTION_CANNOT_SIMULATE_SETTLEMENT",
              "US_BANK_ACCOUNT_VERIFICATION_NOT_CONFIRMABLE",
              "US_BANK_ACCOUNT_VERIFICATION_MUST_BE_MICRO_TRANSFERS_VERIFICATION",
              "US_BANK_ACCOUNT_VERIFICATION_AMOUNTS_DO_NOT_MATCH",
              "US_BANK_ACCOUNT_VERIFICATION_TOO_MANY_CONFIRMATION_ATTEMPTS",
              "US_BANK_ACCOUNT_VERIFICATION_UNABLE_TO_CONFIRM_DEPOSIT_AMOUNTS",
              "US_BANK_ACCOUNT_VERIFICATION_INVALID_DEPOSIT_AMOUNTS",
              "VERIFICATION_OPTIONS_AMOUNT_CANNOT_BE_NEGATIVE",
              "VERIFICATION_OPTIONS_AMOUNT_FORMAT_IS_INVALID",
              "VERIFICATION_OPTIONS_AMOUNT_IS_TOO_LARGE",
              "VERIFICATION_OPTIONS_AMOUNT_NOT_SUPPORTED_BY_PROCESSOR",
              "VERIFICATION_OPTIONS_MERCHANT_ACCOUNT_ID_IS_INVALID",
              "VERIFICATION_OPTIONS_MERCHANT_ACCOUNT_IS_SUSPENDED",
              "VERIFICATION_OPTIONS_MERCHANT_ACCOUNT_IS_FORBIDDEN",
              "VERIFICATION_OPTIONS_MERCHANT_ACCOUNT_CANNOT_BE_SUB_MERCHANT_ACCOUNT",
              "VERIFICATION_OPTIONS_ACCOUNT_TYPE_IS_INVALID",
              "VERIFICATION_OPTIONS_ACCOUNT_TYPE_NOT_SUPPORTED",
              "VERIFICATION_THREE_D_SECURE_AUTHENTICATION_FAILED",
              "VERIFICATION_THREE_D_SECURE_TOKEN_IS_INVALID",
              "VERIFICATION_THREE_D_SECURE_VERIFICATION_DATA_DOESNT_MATCH_VERIFY",
              "VERIFICATION_THREE_D_SECURE_AUTHENTICATION_ID_IS_INVALID",
              "VERIFICATION_THREE_D_SECURE_TRANSACTION_PAYMENT_METHOD_DOESNT_MATCH_THREE_D_SECURE_AUTHENTICATION_PAYMENT_METHOD",
              "VERIFICATION_THREE_D_SECURE_AUTHENTICATION_ID_DOESNT_MATCH_NONCE_THREE_D_SECURE_AUTHENTICATION",
              "VERIFICATION_THREE_D_SECURE_AUTHENTICATION_ID_WITH_THREE_D_SECURE_PASSTHRU_IS_INVALID",
              "VERIFICATION_MERCHANT_ACCOUNT_DOES_NOT_SUPPORT_THREE_D_SECURE",
              "VERIFICATION_MERCHANT_ACCOUNT_DOES_NOT_MATCH_THREE_D_SECURE_MERCHANT_ACCOUNT",
              "VERIFICATION_AMOUNT_DOES_NOT_MATCH_THREE_D_SECURE_AMOUNT",
              "VERIFICATION_THREE_D_SECURE_PASS_THRU_ECI_FLAG_IS_REQUIRED",
              "VERIFICATION_THREE_D_SECURE_PASS_THRU_ECI_FLAG_IS_INVALID",
              "VERIFICATION_THREE_D_SECURE_PASS_THRU_CAVV_IS_REQUIRED",
              "VERIFICATION_THREE_D_SECURE_PASS_THRU_THREE_D_SECURE_VERSION_IS_INVALID",
              "VERIFICATION_THREE_D_SECURE_PASS_THRU_AUTHENTICATION_RESPONSE_IS_INVALID",
              "VERIFICATION_THREE_D_SECURE_PASS_THRU_DIRECTORY_RESPONSE_IS_INVALID",
              "VERIFICATION_THREE_D_SECURE_PASS_THRU_CAVV_ALGORITHM_IS_INVALID",
              "MERCHANT_ACCOUNT_CANNOT_BE_UPDATED",
              "MERCHANT_ACCOUNT_DECLINED",
              "MERCHANT_ACCOUNT_DECLINED_FAILED_KYC",
              "MERCHANT_ACCOUNT_DECLINED_MASTER_CARD_MATCH",
              "MERCHANT_ACCOUNT_DECLINED_OFAC",
              "MERCHANT_ACCOUNT_DECLINED_SSN_INVALID",
              "MERCHANT_ACCOUNT_DECLINED_SSN_MATCHES_DECEASED",
              "MERCHANT_ACCOUNT_ID_CANNOT_BE_UPDATED",
              "MERCHANT_ACCOUNT_ID_FORMAT_IS_INVALID",
              "MERCHANT_ACCOUNT_ID_IS_IN_USE",
              "MERCHANT_ACCOUNT_ID_IS_NOT_ALLOWED",
              "MERCHANT_ACCOUNT_ID_IS_TOO_LONG",
              "MERCHANT_ACCOUNT_MASTER_MERCHANT_ACCOUNT_ID_CANNOT_BE_UPDATED",
              "MERCHANT_ACCOUNT_MASTER_MERCHANT_ACCOUNT_ID_IS_INVALID",
              "MERCHANT_ACCOUNT_MASTER_MERCHANT_ACCOUNT_ID_IS_REQUIRED",
              "MERCHANT_ACCOUNT_MASTER_MERCHANT_ACCOUNT_MUST_BE_ACTIVE",
              "MERCHANT_ACCOUNT_TOS_ACCEPTED_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ACCOUNT_NUMBER_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_COMPANY_NAME_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_COMPANY_NAME_IS_REQUIRED_WITH_TAX_ID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_DATE_OF_BIRTH_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_EMAIL_ADDRESS_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_FIRST_NAME_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_FIRST_NAME_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_LAST_NAME_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_LAST_NAME_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_PHONE_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ROUTING_NUMBER_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ROUTING_NUMBER_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_SSN_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_TAX_ID_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_TAX_ID_IS_REQUIRED_WITH_COMPANY_NAME",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_DATE_OF_BIRTH_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ACCOUNT_NUMBER_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_EMAIL_ADDRESS_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_TAX_ID_MUST_BE_BLANK",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ADDRESS_REGION_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ADDRESS_LOCALITY_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ADDRESS_POSTAL_CODE_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ADDRESS_POSTAL_CODE_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ADDRESS_REGION_IS_REQUIRED",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ADDRESS_STREET_ADDRESS_IS_INVALID",
              "MERCHANT_ACCOUNT_APPLICANT_DETAILS_ADDRESS_STREET_ADDRESS_IS_REQUIRED",
              "MERCHANT_ACCOUNT_BUSINESS_LEGAL_NAME_IS_INVALID",
              "MERCHANT_ACCOUNT_BUSINESS_DBA_NAME_IS_INVALID",
              "MERCHANT_ACCOUNT_BUSINESS_TAX_ID_IS_INVALID",
              "MERCHANT_ACCOUNT_BUSINESS_LEGAL_NAME_IS_REQUIRED_WITH_TAX_ID",
              "MERCHANT_ACCOUNT_BUSINESS_TAX_ID_IS_REQUIRED_WITH_LEGAL_NAME",
              "MERCHANT_ACCOUNT_BUSINESS_TAX_ID_MUST_BE_BLANK",
              "MERCHANT_ACCOUNT_BUSINESS_ADDRESS_REGION_IS_INVALID",
              "MERCHANT_ACCOUNT_BUSINESS_ADDRESS_STREET_ADDRESS_IS_INVALID",
              "MERCHANT_ACCOUNT_BUSINESS_ADDRESS_POSTAL_CODE_IS_INVALID",
              "MERCHANT_ACCOUNT_FUNDING_ROUTING_NUMBER_IS_REQUIRED",
              "MERCHANT_ACCOUNT_FUNDING_ACCOUNT_NUMBER_IS_REQUIRED",
              "MERCHANT_ACCOUNT_FUNDING_ACCOUNT_NUMBER_IS_INVALID",
              "MERCHANT_ACCOUNT_FUNDING_ROUTING_NUMBER_IS_INVALID",
              "MERCHANT_ACCOUNT_FUNDING_DESTINATION_IS_REQUIRED",
              "MERCHANT_ACCOUNT_FUNDING_DESTINATION_IS_INVALID",
              "MERCHANT_ACCOUNT_FUNDING_EMAIL_IS_REQUIRED",
              "MERCHANT_ACCOUNT_FUNDING_EMAIL_IS_INVALID",
              "MERCHANT_ACCOUNT_FUNDING_MOBILE_PHONE_IS_REQUIRED",
              "MERCHANT_ACCOUNT_FUNDING_MOBILE_PHONE_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_FIRST_NAME_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_LAST_NAME_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_DATE_OF_BIRTH_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_DATE_OF_BIRTH_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_SSN_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_EMAIL_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_EMAIL_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_FIRST_NAME_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_LAST_NAME_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_PHONE_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_ADDRESS_STREET_ADDRESS_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_ADDRESS_LOCALITY_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_ADDRESS_POSTAL_CODE_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_ADDRESS_REGION_IS_REQUIRED",
              "MERCHANT_ACCOUNT_INDIVIDUAL_ADDRESS_REGION_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_ADDRESS_STREET_ADDRESS_IS_INVALID",
              "MERCHANT_ACCOUNT_INDIVIDUAL_ADDRESS_POSTAL_CODE_IS_INVALID",
              "MERCHANT_EMAIL_IS_REQUIRED",
              "MERCHANT_EMAIL_FORMAT_IS_INVALID",
              "MERCHANT_COUNTRY_CANNOT_BE_BLANK",
              "MERCHANT_COUNTRY_CODE_ALPHA3_IS_NOT_ACCEPTED",
              "MERCHANT_COUNTRY_CODE_ALPHA3_IS_INVALID",
              "MERCHANT_COUNTRY_CODE_ALPHA2_IS_NOT_ACCEPTED",
              "MERCHANT_COUNTRY_CODE_ALPHA2_IS_INVALID",
              "MERCHANT_COUNTRY_CODE_NUMERIC_IS_NOT_ACCEPTED",
              "MERCHANT_COUNTRY_CODE_NUMERIC_IS_INVALID",
              "MERCHANT_COUNTRY_NAME_IS_NOT_ACCEPTED",
              "MERCHANT_COUNTRY_NAME_IS_INVALID",
              "MERCHANT_CURRENCIES_ARE_INVALID",
              "MERCHANT_INCONSISTENT_COUNTRY",
              "MERCHANT_PAYMENT_METHODS_ARE_INVALID",
              "MERCHANT_PAYMENT_METHODS_ARE_NOT_ALLOWED",
              "MERCHANT_MERCHANT_ACCOUNT_EXISTS_FOR_CURRENCY",
              "MERCHANT_CURRENCY_IS_REQUIRED",
              "MERCHANT_CURRENCY_IS_INVALID",
              "MERCHANT_NO_MERCHANT_ACCOUNTS",
              "MERCHANT_MERCHANT_ACCOUNT_EXISTS_FOR_ID",
              "MERCHANT_MERCHANT_ACCOUNT_NOT_AUTH_ONBOARDED",
              "REPORT_TRANSACTION_LEVEL_FEES_UNKNOWN_MERCHANT_ACCOUNT",
              "RISK_DATA_CUSTOMER_BROWSER_IS_TOO_LONG",
              "RISK_DATA_CUSTOMER_DEVICE_ID_IS_TOO_LONG",
              "RISK_DATA_CUSTOMER_LOCATION_ZIP_INVALID_CHARACTERS",
              "RISK_DATA_CUSTOMER_LOCATION_ZIP_IS_INVALID",
              "RISK_DATA_CUSTOMER_LOCATION_ZIP_IS_TOO_LONG",
              "RISK_DATA_CUSTOMER_TENURE_IS_TOO_LONG",
              "VENMO_COMMON_ID_REQUIRED",
              "VENMO_USERNAME_REQUIRED",
              "VENMO_USER_ID_REQUIRED",
              "VENMO_CUSTOMER_ID_REQUIRED",
              "VENMO_ACCOUNTS_NOT_ACCEPTED_BY_MERCHANT_ACCOUNT",
              "VENMO_INVALID_CUSTOMER_ID",
              "REQUIRED_ATTRIBUTE_MISSING",
              "ATTRIBUTE_FORMAT_INVALID",
              "ATTRIBUTE_IS_UNEXPECTED",
              "ATTRIBUTE_INCORRECT_TYPE",
              "UNKNOWN_VALIDATION_ERROR"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ValidationErrors": {
        "type": "object",
        "properties": {
          "allDeepValidationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          },
          "allValidationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "VenmoAccount": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "venmoUserId": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          }
        }
      },
      "VenmoAccountDetails": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "venmoUserId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "sourceDescription": {
            "type": "string"
          }
        }
      },
      "VisaCheckoutCard": {
        "type": "object",
        "properties": {
          "billingAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "bin": {
            "type": "string"
          },
          "callId": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "customerId": {
            "type": "string"
          },
          "customerLocation": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "commercial": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "debit": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "durbinRegulated": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "healthcare": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "payroll": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "prepaid": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "productId": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "uniqueNumberIdentifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "verification": {
            "$ref": "#/components/schemas/CreditCardVerification"
          },
          "default": {
            "type": "boolean"
          },
          "venmoSdk": {
            "type": "boolean"
          },
          "expirationDate": {
            "type": "string"
          },
          "maskedNumber": {
            "type": "string"
          },
          "expired": {
            "type": "boolean"
          }
        }
      },
      "VisaCheckoutCardDetails": {
        "type": "object",
        "properties": {
          "bin": {
            "type": "string"
          },
          "callId": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "cardholderName": {
            "type": "string"
          },
          "expirationMonth": {
            "type": "string"
          },
          "expirationYear": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "last4": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "commercial": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "debit": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "durbinRegulated": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "healthcare": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "payroll": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "prepaid": {
            "type": "string",
            "enum": [
              "Yes",
              "No",
              "Unknown"
            ]
          },
          "productId": {
            "type": "string"
          },
          "countryOfIssuance": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "maskedNumber": {
            "type": "string"
          }
        }
      },
      "Adresse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "rue": {
            "type": "string"
          },
          "complement": {
            "type": "string"
          },
          "codePostal": {
            "type": "string"
          },
          "ville": {
            "type": "string"
          },
          "typeAdresse": {
            "$ref": "#/components/schemas/TypeAdresse"
          },
          "idUtilisateur": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UtilisateurDto": {
        "type": "object",
        "properties": {
          "idUtilisateur": {
            "type": "integer",
            "format": "int32"
          },
          "nom": {
            "type": "string"
          },
          "prenom": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean"
          },
          "adresse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Adresse"
            }
          }
        }
      },
      "ClientTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
